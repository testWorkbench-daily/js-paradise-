(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{421:function(n,t,e){"use strict";e.r(t);var a=e(56),r=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[n._v("#")]),n._v(" 目标")]),n._v(" "),e("p",[n._v("用纯css画出如下图形")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://img-blog.csdn.net/20180426100411245?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lvdW5nX0VtaWx5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70",alt:""}})]),n._v(" "),e("h2",{attrs:{id:"方法一-利用border"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法一-利用border"}},[n._v("#")]),n._v(" 方法一： 利用border")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n    <style>\n       #warning {\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 200px;\n            height: 200px;\n            overflow: hidden;\n            border-radius: 50%;\n            background: rebeccapurple;\n            clip:rect(0,200px,200px,0);\n        }\n        #warning .bg {\n            position: absolute;\n            width: 0;\n            height: 0;\n            top:-73.2px;\n            left: 0px;\n            border-top: 173.2px solid  rgb(246, 226, 54);\n            border-bottom: 173.2px solid  black;\n            border-left: 100px solid  transparent;\n            border-right: 100px solid  transparent;\n            border-radius: 100%;\n        }\n        #warning .bg:nth-child(1) {\n            transform: rotate(0deg);\n        }\n        #warning .bg:nth-child(2) {\n            transform: rotate(120deg);\n        }\n        #warning .bg:nth-child(3) {\n            transform: rotate(240deg);\n        }\n\n    </style>\n</head>\n\n<body>\n    <div id="warning">\n        <div class="bg"></div>\n        <div class="bg"></div>\n        <div class="bg"></div>\n    </div>\n    <script>\n        /*\n            同样的方法：在黑色的底色上生成3个扇形，然后不断旋转而得\n            扇形得来：\n                border构造相间的三角形，然后使用overflow-hidden和border-radius剪裁成圆\n        */\n    <\/script>\n</body>\n\n</html>\n\n')])])]),e("h2",{attrs:{id:"方法二-利用矩形与圆相切"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法二-利用矩形与圆相切"}},[n._v("#")]),n._v(" 方法二：利用矩形与圆相切")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n    <style>\n        :root{\n            --color1:black;\n            --color2:rgb(248, 228, 47);\n            --radius:100px;\n        }\n        .sector {\n            width: calc(var(--radius)*2);\n            height: calc(var(--radius)*2);\n            position: absolute;\n            clip: rect(0 200px 200px 100px);/*上右下左*/\n            overflow: hidden;\n        }\n        .sector::after {\n            content: \'\';\n            width: 100%; \n            height: 100%;\n            background: var(--color2);\n            position: absolute;\n            border-radius: 50%;\n            clip: rect(0 100px 200px 0); \n            background: var(--color2);\n            transform: rotate(60deg);\n        }\n        .sector:nth-of-type(1) {\n            transform: rotate(-30deg);\n        }\n        .sector:nth-of-type(2) {\n            transform: rotate(90deg);\n        }\n        .sector:nth-of-type(3) {\n            transform: rotate(210deg);\n        } \n        .warning{\n            width: calc(var(--radius)*2);\n            height: calc(var(--radius)*2);\n            background: var(--color1);\n            border-radius: 50%;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%,-50%);\n        }\n    </style>\n</head>\n<body>\n    <div class="warning">\n        <div class="sector"></div>\n        <div class="sector"></div>\n        <div class="sector"></div> \n    </div>\n</body>\n<script>\n    /* 思路：\n        6个扇形通过旋转拼接而成，而扇形可以通过 一个标签+伪类的方式形成\n        张鑫旭博文灵感：http://www.zhangxinxu.com/wordpress/2017/11/pure-css-colorful-circle/\n        以黑色为底色，生成黄色的3个扇形标签然后不断旋转而得\n    */\n<\/script>\n</html>\n')])])]),e("h2",{attrs:{id:"方法三-利用渐变色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法三-利用渐变色"}},[n._v("#")]),n._v(" 方法三：利用渐变色")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n    <style>\n        .warning {\n            width: 200px;\n            height: 200px;\n            border-radius: 50%;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%,-50%);\n            background:\n                linear-gradient(60deg,transparent 50%,black 50%),\n                linear-gradient(120deg,transparent 50%,yellow 50%),\n                linear-gradient(180deg,transparent 50%,black 50%);\n            \n        }\n        .warning::before{\n            content: "";\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            position: absolute;\n            background:\n                linear-gradient(60deg,transparent 50%,yellow 50%),\n                linear-gradient(120deg,transparent 50%,black 50%),\n                linear-gradient(180deg,transparent 50%,yellow 50%);\n            transform: rotate(180deg);\n            clip: rect(100px 200px 200px 0);\n            overflow: hidden;\n        } \n    </style>\n</head>\n\n<body>\n    <div class="warning"></div>\n    <script>\n        /*\n            三种解法，分别从构建扇形的不同解法中入手的\n                1：矩形+半圆相切得扇形得方式\n                2: 渐变\n                3：border\n        */\n        // 解法1 ：矩形+半圆相切得扇形得方式\n        \n    \n    \n    <\/script>\n</body>\n\n</html>\n')])])]),e("h2",{attrs:{id:"方法四-利用skew"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法四-利用skew"}},[n._v("#")]),n._v(" 方法四： 利用skew")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>扇形</title>\n  <style>\n\n\n.pie {\n\tposition: relative;\n\tmargin: 1em auto;\n\tpadding: 0;\n\twidth: 32em;\n  height: 32em;\n\tborder-radius: 50%;\n\tlist-style: none;\n  overflow: hidden;\n}\n.slice {\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 0;\n  right: 0;\n\twidth: 50%;\n  height: 50%;\n\ttransform-origin: 0% 100%;\n}\n.slice-one {\n  transform: rotate(30deg) skewY(-30deg);\n  background: black;\n}\n.slice-two {\n  transform: rotate(-30deg) skewY(-30deg);\n  background: yellow;\n}\n.slice-three {\n  transform: rotate(-90deg) skewY(-30deg);\n  background: black;\n}\n.slice-four {\n  transform: rotate(-150deg) skewY(-30deg);\n  background: yellow;\n}\n.slice-five {\n  transform: rotate(-210deg) skewY(-30deg);\n  background: black;\n}\n.slice-six {\n  transform: rotate(-270deg) skewY(-30deg);\n  background: yellow;\n}\n\n  </style>\n</head>\n<body>\n\n<ul class='pie'>\n    <li class='slice-one slice'> </li>\n    <li class='slice-two slice'> </li>\n    <li class='slice-three slice'> </li>\n    <li class='slice-four slice'> </li>\n    <li class='slice-five slice'> </li>\n    <li class='slice-six slice'> </li>\n  <ul>\n</body>\n</html>\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);