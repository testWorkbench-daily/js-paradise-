(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{474:function(e,t,a){"use strict";a.r(t);var n=a(56),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vue源码笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue源码笔记"}},[e._v("#")]),e._v(" vue源码笔记")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'$data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" dataDef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Vue")]),e._v("的时候$data会在vm中显示\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$el  表示dom节点\n$vnode 父vnode the placeholder node in parent tree\n_vnode 自身vnode  the root of the child tree\n\nObserver用来监听data\n\nObserver有value(__ob__指向observer实例)  dep\n\n\nWatcher用来\nWatcher有deps newDeps depIds newDepIds getter就是updateComponent\n\n执行watcher.get()的时候会把watcher赋值给Dep.target,然后渲染，最后pop\n执行callHook getData handleError的时候都会给Dep.target赋值为空,然后pop,目的是不给getter绑定dep\n\n每次mountComponent的时候Dep.target就是当前的watcher\n\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 动作\n\npatch 指把vnode翻译成elm,并插入到body\nrender 把createElement转成vnode\n\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("watcher与dep的关系\n\ndep属于defineReactive里面的，可以理解为属于data\n\ndep.subs: Array<Watcher>\n\nwatcher的depIds和deps保存的是dep, newDeps和newDepIds保存的是new\n\naddDep的时候会把Dep.target加入到dep里，同时会把dep加入到watcher的newDeps里，cleanupDeps的时候就把newDeps赋值给deps\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Watcher有\nrenderwatcher\n_computedWatchers 是lazy的，每次执行update都会把dirty变为true，然后每次render模板的时候判断dirty是否为true来决定是否evaluate（可以理解为懒更新），执行完后把dirty变为false\nwatch watcher\n")])])]),a("p",[e._v("lifecycle是有关渲染的东西")]),e._v(" "),a("p",[e._v("vm有$el\nvnode有elm")]),e._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5bfc21d2e51d4544313df666",target:"_blank",rel:"noopener noreferrer"}},[e._v("平庸前端码农之蜕变 — AST"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ab35c3cf265da23771951a2",target:"_blank",rel:"noopener noreferrer"}},[e._v("从babel讲到AST"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5d50d1d9f265da03aa25607b",target:"_blank",rel:"noopener noreferrer"}},[e._v("AST 与前端工程化实战"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ab35c3cf265da23771951a2",target:"_blank",rel:"noopener noreferrer"}},[e._v("从babel讲到AST"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5c8d3c48f265da2d8763bdaf",target:"_blank",rel:"noopener noreferrer"}},[e._v("高级前端基础-JavaScript抽象语法树AST"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart",target:"_blank",rel:"noopener noreferrer"}},[e._v("js-code-to-svg-flowchart"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jamiebuilds/the-super-tiny-compiler",target:"_blank",rel:"noopener noreferrer"}},[e._v("the-super-tiny-compiler"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/BabylonJS/Babylon.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babylon.js"),a("OutboundLink")],1),e._v("(canvas引擎)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ftomassetti/LangSandbox",target:"_blank",rel:"noopener noreferrer"}},[e._v("LangSandbox"),a("OutboundLink")],1),e._v("(Project to illustrate how to build a programming language)")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("astexplorer"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);