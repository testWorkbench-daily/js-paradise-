(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{449:function(t,e,r){"use strict";r.r(e);var a=r(56),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" html")]),t._v(" "),r("ol",[r("li",[t._v("HTML5 和 CSS3 有哪些")])]),t._v(" "),r("p",[t._v("https://www.cnblogs.com/star91/p/5659134.html")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li")]),t._v(" "),r("h2",{attrs:{id:"css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" css")]),t._v(" "),r("ol",[r("li",[t._v("BFC")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/zuopf769/notebook/blob/master/fe/BFC%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("史上最全面、最透彻的 BFC 原理剖析"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/59b73d5bf265da064618731d",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习 BFC (Block Formatting Context)"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("CSS 清浮动处理")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/dolphinX/p/3508869.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 清浮动处理（Clear 与 BFC）"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("移动端 1px")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d19b729f265da1bb2774865",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动端 1px 解决方案"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/31f8907637a6",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动端 1px 像素问题及解决办法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5df3053ce51d45583d425ada",target:"_blank",rel:"noopener noreferrer"}},[t._v("吃透移动端 1px ｜从基本原理到开源解决方案"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000010969367",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS3 border-image 彻底明白"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("首先要了解虚拟像素（css 像素）、物理像素（设备像素）、逻辑像素 和设备像素比(dpr)的概念，然后要了解我们设计师的设计稿一般都是 750*1334，这个设计稿上的 1px 是 css 像素, 而设计师要的效果是 1px 的物理像素，所以需要除于设备像素比(dpr)，比如 iPhone6 的 dpr 是 2，就 1/2")]),t._v(" "),r("p",[t._v("dpr 的意思可以这样理解，1css 像素要用 dpr 个物理像素来表示")]),t._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[t._v("圣杯布局和双飞翼布局")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/81ef7e7094e8",target:"_blank",rel:"noopener noreferrer"}},[t._v("圣杯布局和双飞翼布局的理解与思考"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"5"}},[r("li",[t._v("CSS 画扇形")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/young_Emily/article/details/80091667",target:"_blank",rel:"noopener noreferrer"}},[t._v("css 画扇形的几种实现方式"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的理解 CSS 的 linear-gradient？"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" js")]),t._v(" "),r("h3",{attrs:{id:"表达式和语句"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#表达式和语句"}},[t._v("#")]),t._v(" 表达式和语句")]),t._v(" "),r("p",[t._v("表达式是由运算符构成，并运算产生结果的语法结构。每个表达式都会产生一个值，它可以放在任何需要一个值的地方")]),t._v(" "),r("p",[t._v("语句则是由“；（分号）”分隔的句子或命令。如果在表达式后面加上一个“；”分隔符，这就被称为“表达式语句”。")]),t._v(" "),r("ol",[r("li",[t._v("getcomputedstyle 和 style 的区别")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1.只读与可写\n  getComputedStyle方法是只读的，只能获取样式，不能设置；而element.style能读能写，能屈能伸。\n2.获取的对象范围\n  getComputedStyle方法获取的是最终应用在元素上的所有CSS属性对象（即使没有CSS代码，也会把默认的祖宗八代都显示出来）；\n  而element.style只能获取元素style属性中的CSS样式。\n  因此对于一个光秃秃的元素<p>，getComputedStyle方法返回对象中length属性值（如果有）就是190+(据我测试FF:192, IE9:195, Chrome:253, 不同环境结果可能有差异),\n  而element.style就是0。\n3.作用\n  getComputedStyle方法有一个很重要的，类似css()方法没有的功能——获取伪类元素样式\n4.兼容性\n  getComputedStyle方法IE6~8是不支持的\n\n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("判断数据类型的方法")])]),t._v(" "),r("ul",[r("li",[t._v("typeof")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("console.log(typeof 2);               // number\nconsole.log(typeof true);            // boolean\nconsole.log(typeof 'str');           // string\nconsole.log(typeof undefined);       // undefined\nconsole.log(typeof []);              // object\nconsole.log(typeof {});              // object\nconsole.log(typeof function(){});    // function\nconsole.log(typeof null);            // object\n\n")])])]),r("ul",[r("li",[t._v("instanceof")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("console.log(2 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false\nconsole.log('str' instanceof String);                // false\nconsole.log([] instanceof Array);                    // true\nconsole.log(function(){} instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n")])])]),r("ul",[r("li",[t._v("Object.prototype.toString.call()")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var toString = Object.prototype.toString;\n\nconsole.log(toString.call(2));                      //[object Number]\nconsole.log(toString.call(true));                   //[object Boolean]\nconsole.log(toString.call('str'));                  //[object String]\nconsole.log(toString.call([]));                     //[object Array]\nconsole.log(toString.call(function(){}));           //[object Function]\nconsole.log(toString.call({}));                     //[object Object]\nconsole.log(toString.call(undefined));              //[object Undefined]\nconsole.log(toString.call(null));                   //[object Null]\n")])])]),r("ol",{attrs:{start:"3"}},[r("li",[t._v("变量提升&作用域")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5af109426fb9a07aa047f1c7",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解作用域及闭包"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d13a5fce51d455a694f9560",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 JavaScript, 从作用域与作用域链开始"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c8290455188257e5d0ec64f",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 JavaScript 作用域和作用域链"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"4"}},[r("li",[t._v("闭包")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000011504517",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解 JS 闭包形成的原因"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"5"}},[r("li",[t._v("this")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c96d0c751882511c832ff7b",target:"_blank",rel:"noopener noreferrer"}},[t._v("嗨，你真的懂 this 吗？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://xieyufei.com/2016/09/18/Explain-Js-This.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Js 中 this 的用法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5dde27615188256ebd1618fb",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过运行机制看 this 绑定 、作用域、作用域链和闭包"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.crimx.com/2016/05/12/understanding-this/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript this 的六道坎"),r("OutboundLink")],1)])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1. 普通函数的调用：this指向window(浏览器环境)。\n2. 对象方法的调用：this指向调用对象。（隐式绑定）\n3. 构造函数：this指向构造函数实例。\n4. apply、call、bind：this指向绑定值。（显示绑定）\n5. 箭头函数this：this指向外层第一个普通函数调用的this。（默认绑定）(对于箭头函数，只要看它在哪里创建)\n\n\n优先级\n1. 函数是否存在new绑定调用：如果是的话this绑定到新创建的对象上。\n2. 函数是否通过apply、call、bind显示绑定：如果是，this绑定到指定对象上。\n3. 函数是否在对象方法隐式调用：如果是的话，this绑定到调用对象。\n4. 如果上面三条都不满足的话：在严格模型下，this绑定到undefined，在非严格模式下，this绑定到全局对象上。\n\n")])])]),r("p",[t._v("5.0 new 执行的操作")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1. 创建一个全新的对象。\n2. 这个新对象会被执行 [[Prototype]] 连接。\n3. 这个新对象会绑定到函数调用的 this。\n4. 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象。\n")])])]),r("p",[t._v("手动实现 new")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function New(Constructor, ...args){\n    let obj = {};   // 创建一个新对象\n    Object.setPrototypeOf(obj, Constructor.prototype);  // 连接新对象与函数的原型\n    return Constructor.apply(obj, args) || obj;   // 执行函数，改变 this 指向新的对象\n}\n\nfunction Foo(a){\n    this.a = a;\n}\n\nNew(Foo, 1);  // Foo { a: 1 }\n\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('function _new() {\n    let target = {}; //创建的新对象\n    //第一个参数是构造函数\n    let [constructor, ...args] = [...arguments];\n    //执行[[原型]]连接;target 是 constructor 的实例\n    target.__proto__ = constructor.prototype;\n    //执行构造函数，将属性或方法添加到创建的空对象上\n    let result = constructor.apply(target, args);\n    if (result && (typeof (result) == "object" || typeof (result) == "function")) {\n        //如果构造函数执行的结构返回的是一个对象，那么返回这个对象\n        return result;\n    }\n    //如果构造函数返回的不是一个对象，返回创建的新对象\n    return target;\n}\n\n')])])]),r("h3",{attrs:{id:"object-create"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-create"}},[t._v("#")]),t._v(" Object.create")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5acd8ced6fb9a028d444ee4e",target:"_blank",rel:"noopener noreferrer"}},[t._v("详解 Object.create(null)"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"6"}},[r("li",[t._v("理解 constructor、prototype、"),r("strong",[t._v("proto")]),t._v("和原型链")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5cc99fdfe51d453b440236c3",target:"_blank",rel:"noopener noreferrer"}},[t._v("用自己的方式（图）理解 constructor、prototype、"),r("strong",[t._v("proto")]),t._v("和原型链"),r("OutboundLink")],1)])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("任何一个对象都有constructor\n对象和函数的constructor都是Function\n\n")])])]),r("ol",{attrs:{start:"7"}},[r("li",[t._v("let const var")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5bab1d4ae51d450e4d2feb7a",target:"_blank",rel:"noopener noreferrer"}},[t._v("一道面试题引发的“血案”"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"8"}},[r("li",[t._v("setTimeout 和 setInterval 和 requestAnimationFrame")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://my.oschina.net/huskydog/blog/1553720",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 setInterval 与 setTimeout 作用域问题"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/59cf06745188253fbe466f78",target:"_blank",rel:"noopener noreferrer"}},[t._v("注意点——setTimeout、setInterval 使用"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://qingbob.com/difference-between-settimeout-setinterval/",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解 setTimeout 和 setInterval 吗？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5aa4c47af265da239866e236",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 setTimeout"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c4044e1f265da614f708f7d",target:"_blank",rel:"noopener noreferrer"}},[t._v("深度解密 setTimeout 和 setInterval——为 setInterval 正名！"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://palmer.arkstack.cn/2017/12/%E4%BB%8EsetTimeout-setInterval%E7%9C%8BJS%E7%BA%BF%E7%A8%8B/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 setTimeout/setInterval 看 JS 线程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c3ca3d76fb9a049a979f429",target:"_blank",rel:"noopener noreferrer"}},[t._v("你知道的 requestAnimationFrame【从 0 到 0.1】"),r("OutboundLink")],1)])]),t._v(" "),r("ol",{attrs:{start:"9"}},[r("li",[t._v("Event Loop")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/59e85eebf265da430d571f89",target:"_blank",rel:"noopener noreferrer"}},[t._v("这一次，彻底弄懂 JavaScript 执行机制"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 运行机制详解：再谈 Event Loop"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d21c6d56fb9a07ea4209ffc",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 的 Event Loop 详解"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/latentflip/loupe",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visualizing the javascript runtime at runtime"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"json-parse-json-stringify-的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#json-parse-json-stringify-的缺点"}},[t._v("#")]),t._v(" JSON.parse(JSON.stringify())的缺点")]),t._v(" "),r("p",[t._v("在 JSON.stringify()阶段")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1.如果obj里面有时间对象，则JSON.stringify后再JSON.parse的结果，时间将只是字符串的形式，而不是对象的形式\n\n2.如果obj里有RegExp(正则表达式的缩写)、Error对象，则序列化的结果将只得到空对象\n\n3、如果obj里有函数，undefined，则序列化的结果会把函数或 undefined丢失\n\n4、如果obj里有NaN、Infinity和-Infinity，则序列化的结果会变成null\n\n5、JSON.stringify()只能序列化对象的可枚举的自有属性，例如 如果obj中的对象是有构造函数生成的， 则使用JSON.parse(JSON.stringify(obj))深拷贝后，会丢弃对象的constructor\n\n6、如果对象中存在循环引用的情况也无法正确实现深拷贝\n")])])]),r("h3",{attrs:{id:"进程与线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d43017be51d4561f40adcf9",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 Node.js 中的进程与线程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程与线程的一个简单解释"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c932660f265da612524ad6d",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇让你明白进程与线程之间的区别与联系"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/zhuoxiuwu/article/details/77850724",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅析操作系统的进程、线程区别"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b4ac0d0f265da0fa959a785",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 函数式编程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数式编程入门教程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ramda/ramda",target:"_blank",rel:"noopener noreferrer"}},[t._v("ramda"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/03/ramda.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ramda 函数库参考教程"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"深拷贝与浅拷贝"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝与浅拷贝"}},[t._v("#")]),t._v(" 深拷贝与浅拷贝")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b5dcf8351882519790c9a2e",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅拷贝与深拷贝"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何写出一个惊艳面试官的深拷贝?"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/950905/record-summary/blob/master/common/%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("一步一步实现深拷贝"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"防抖与节流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#防抖与节流"}},[t._v("#")]),t._v(" 防抖与节流")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5da7c77a51882554c0757f46",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 史上最精简！防抖节流（你的比我精简，算我输）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c87b54ce51d455f7943dddb",target:"_blank",rel:"noopener noreferrer"}},[t._v("2019 面试准备 - JS 防抖与节流"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"对象与数组的遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对象与数组的遍历"}},[t._v("#")]),t._v(" 对象与数组的遍历")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/chenyablog/p/6477866.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("javaScript 遍历对象、数组总结"),r("OutboundLink")],1),t._v("\n对象的属性分为三种： 是否是自身属性 是否可以枚举 是否是 Symbol 属性\n注意：对象没有 for...of...")])]),t._v(" "),r("p",[t._v("举个栗子")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["b"]  返回一个数组,包括对象自身的(不含继承的)所有可枚举属性(不含Symbol属性).')]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b : 2 a : 1   循环遍历对象自身的和继承的可枚举属性(不含Symbol属性)")]),t._v("\n\nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["b", "c"] 返回一个数组,包含对象自身的所有属性(不含Symbol属性,但是包括不可枚举属性).')]),t._v("\nReflect"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ownKeys")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["b", "c", Symbol()] 返回一个数组,包含对象自身的所有属性,不管属性名是Symbol或字符串,也不管是否可枚举.')]),t._v("\n")])])]),r("h3",{attrs:{id:"数组去重"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[t._v("#")]),t._v(" 数组去重")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5949d85f61ff4b006c0de98b",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 专题之数组去重"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/IA41OWhKS062WzTOQ6hDAA",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何答一道惊艳面试官的数组去重问题？"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"严格模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" 严格模式")]),t._v(" "),r("p",[t._v("严格模式主要有以下限制。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("变量必须声明后再使用\n函数的参数不能有同名属性，否则报错\n不能使用with语句\n不能对只读属性赋值，否则报错\n不能使用前缀 0 表示八进制数，否则报错\n不能删除不可删除的属性，否则报错\n不能删除变量delete prop，会报错，只能删除属性delete global[prop]\neval不会在它的外层作用域引入变量\neval和arguments不能被重新赋值\narguments不会自动反映函数参数的变化\n不能使用arguments.callee\n不能使用arguments.caller\n禁止this指向全局对象\n不能使用fn.caller和fn.arguments获取函数调用的堆栈\n增加了保留字（比如protected、static和interface）\n")])])]),r("h3",{attrs:{id:"异常处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[t._v("#")]),t._v(" 异常处理")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/a45c9d089c93",target:"_blank",rel:"noopener noreferrer"}},[t._v("[html] script 的 crossorigin 属性"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"代码质量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码质量"}},[t._v("#")]),t._v(" 代码质量")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/beginor/clean-code-javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码整洁的 JavaScript"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b21ae895188257d5e3b9f89",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何提升 Web 应用的代码质量"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5965943ff265da6c30653879",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 正则表达式完整教程（略长）"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"typescript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" typescript")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.tslang.cn/docs/home.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript 中文官网"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c2723635188252d1d34dc7d",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 中的 interface 和 type 到底有什么区别"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"vue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" vue")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d59f2a451882549be53b170",target:"_blank",rel:"noopener noreferrer"}},[t._v("30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5dc3cfce6fb9a04a665f100e",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue 3 中令人兴奋的新功能"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/4/11/162b38ab2d635662?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"vue响应式原理"}})]),t._v(" "),r("h3",{attrs:{id:"vue-cli"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli"}},[t._v("#")]),t._v(" vue-cli")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b7392b16fb9a009b82c05de",target:"_blank",rel:"noopener noreferrer"}},[t._v("改造 vue-cli，让它更好用"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b2872516fb9a00e8626e34f",target:"_blank",rel:"noopener noreferrer"}},[t._v("这可能是 vue-cli 最全的解析了……"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b592db551882536e5178ce6",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue-cli 原理分析"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"vue3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue3"}},[t._v("#")]),t._v(" vue3")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官: 实现双向绑定 Proxy 比 defineproperty 优劣如何?"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"组件间通信示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信示例"}},[t._v("#")]),t._v(" 组件间通信示例")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://codesandbox.io/s/vue-bus-tms87",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventBus （$emit / $on）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://codesandbox.io/s/vue-attrs-listeners-z5rwe",target:"_blank",rel:"noopener noreferrer"}},[t._v("$attrs/$listeners"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://codesandbox.io/s/affectionate-matsumoto-w5l8h",target:"_blank",rel:"noopener noreferrer"}},[t._v("provide / inject "),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"react-组件间通信示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-组件间通信示例"}},[t._v("#")]),t._v(" react 组件间通信示例")]),t._v(" "),r("ul",[r("li",[t._v("Context")]),t._v(" "),r("li",[t._v("render prop")]),t._v(" "),r("li",[t._v("组合组件，提升组件层次，把组件作为 prop")]),t._v(" "),r("li",[t._v("redux")])]),t._v(" "),r("h2",{attrs:{id:"es6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" es6")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://es6.ruanyifeng.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 入门教程"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d9bf530518825427b27639d",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.5 万字概括 ES6 全部特性"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"什么叫暂时性死区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么叫暂时性死区"}},[t._v("#")]),t._v(" 什么叫暂时性死区")]),t._v(" "),r("p",[t._v("在代码块内，使用 let 命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称 TDZ）。")]),t._v(" "),r("h2",{attrs:{id:"weex"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#weex"}},[t._v("#")]),t._v(" weex")]),t._v(" "),r("h3",{attrs:{id:"源码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://halfrost.com/weex_js_framework/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Weex 中别具匠心的 JS Framework"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"react"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e153e096fb9a048297390c1",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 Vue 和 React 的一些对比及个人思考（上）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5cad39b3f265da03502b1c0a",target:"_blank",rel:"noopener noreferrer"}},[t._v("【React 深入】从 Mixin 到 HOC 再到 Hook"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"小程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小程序"}},[t._v("#")]),t._v(" 小程序")]),t._v(" "),r("h3",{attrs:{id:"taro"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#taro"}},[t._v("#")]),t._v(" taro")]),t._v(" "),r("h2",{attrs:{id:"webpack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5de87444518825124c50cd36",target:"_blank",rel:"noopener noreferrer"}},[t._v("2020 年了,再不会 webpack 敲得代码就不香了(近万字实战)"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5de06aa851882572d672c1ad",target:"_blank",rel:"noopener noreferrer"}},[t._v("一步步从零开始用 webpack 搭建一个大型项目"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"浏览器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/34453198?group_id=957277540147056640",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入 URL 到页面加载的过程？如何由一道题完善自己的前端知识体系！"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5a6547d0f265da3e283a1df7",target:"_blank",rel:"noopener noreferrer"}},[t._v("从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"页面渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染"}},[t._v("#")]),t._v(" 页面渲染")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5ca0c0abe51d4553a942c17d",target:"_blank",rel:"noopener noreferrer"}},[t._v("你不知道的浏览器页面渲染机制"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&mid=2247489674",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器页面渲染机制，你真的弄懂了吗？"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/entry/5ad86c16f265da505a77dca4",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底理解浏览器的缓存机制"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000008377508",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_42817899/article/details/84553595",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端静态资源缓存最优解以及 max-age 的陷阱"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b3c87386fb9a04f9a5cb037",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试精选之 http 缓存"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"跨域与安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#跨域与安全"}},[t._v("#")]),t._v(" 跨域与安全")]),t._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://juejin.im/post/5a6320d56fb9a01cb64ee191",target:"_blank",rel:"noopener noreferrer"}},[t._v("我知道的跨域与安全"),r("OutboundLink")],1)])]),t._v(" "),r("li",[r("p",[t._v("跨站攻击")])])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1. XSS（cross-site-scripting, 跨站脚本）攻击\n\n解决方法： 字符串转义\n\n2. 跨站请求伪造（CSRF）\n\n解决方法： 1.明文传递cookie\n         2. 请求一个随机字符串（只能用一次）\n\n")])])]),r("ul",[r("li",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000012469713",target:"_blank",rel:"noopener noreferrer"}},[t._v("ajax 跨域，这应该是最全的解决方案了"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器同源政策及其规避方法"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("可以通过 Symbol 进行 iframe 的跨域 http://es6.ruanyifeng.com/#docs/symbol")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("iframe = document.createElement('iframe');\niframe.src = String(window.location);\ndocument.body.appendChild(iframe);\n\niframe.contentWindow.Symbol.for('foo') === Symbol.for('foo')\n// true\n")])])]),r("ul",[r("li",[t._v("限制网站被 iframe 包裹")])]),t._v(" "),r("p",[t._v("添加这个 http 头可以限制别人把你的网站套成它的 iframe")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("X-Frame-Options: SAMEORIGIN\n")])])]),r("ul",[r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/bella-lin/p/9266994.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS判断页面是否被iframe及禁止页面被iframe"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" http")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/u010359398/article/details/82142449",target:"_blank",rel:"noopener noreferrer"}},[t._v("七层网络结构"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"垃圾回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[t._v("#")]),t._v(" 垃圾回收")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e0ddc24f265da5d1805ee6f",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解 JavaScript 垃圾回收 — 现代 JavaScript 教程"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e11cd225188253a73288212",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文带你看透 Chrome 浏览器架构"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5bec223f5188250c102116b5",target:"_blank",rel:"noopener noreferrer"}},[t._v("用 100 行代码提升 10 倍的性能"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"移动端"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#移动端"}},[t._v("#")]),t._v(" 移动端")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5dfadb91e51d45584006e486",target:"_blank",rel:"noopener noreferrer"}},[t._v("吃透移动端 H5 与 Hybrid ｜实践踩坑 12 种问题汇总"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d70747cf265da03e16897c8",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端基础知识概述 -- 移动端开发的屏幕、图像、字体与布局的兼容适配"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://caibaojian.com/mobile-knowledge.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动前端知识总结"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"nodejs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nodejs"}},[t._v("#")]),t._v(" nodejs")]),t._v(" "),r("h3",{attrs:{id:"npm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/02/npx.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("npx 使用教程"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"服务端相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务端相关"}},[t._v("#")]),t._v(" 服务端相关")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e055d9ef265da33997a42cc",target:"_blank",rel:"noopener noreferrer"}},[t._v("傻傻分不清之 Cookie、Session、Token、JWT"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e11a6e96fb9a048411a4eca",target:"_blank",rel:"noopener noreferrer"}},[t._v("图文并茂，为你揭开“单点登录“的神秘面纱"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"算法与数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法与数据结构"}},[t._v("#")]),t._v(" 算法与数据结构")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d5b307b5188253da24d3cd1",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端该如何准备数据结构和算法？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://blog.csdn.net/charlene0824/article/details/51387165",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 实现排序算法（冒泡、选择、插入、二分插入、快速、希尔）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端面试中的常见的算法问题"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5de7c053518825125d1497e2",target:"_blank",rel:"noopener noreferrer"}},[t._v("图形算法（邻接矩阵）"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d7fb1e16fb9a06ac76de435",target:"_blank",rel:"noopener noreferrer"}},[t._v("5 分钟带你领略:某跳动公司面试出镜率最高的算法之一——虚拟十叉树建模问题"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c9242926fb9a070b33c4f57",target:"_blank",rel:"noopener noreferrer"}},[t._v("【从蛋壳到满天飞】JS 数据结构解析和算法实现-集合和映射"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5d85cda3f265da03b638e918",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊聊面试必考-递归思想与实战"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.toutiao.com/a6750625828465279495",target:"_blank",rel:"noopener noreferrer"}},[t._v("算法的时间和空间复杂度，就是这么简单"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jianshu.com/p/61f75e0f549f",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 二叉树深入理解"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/K_oGI2rl3epTirxkST5LVQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("3 分钟理解完全二叉树、平衡二叉树、二叉查找树"),r("OutboundLink")],1)])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("\n")])])]),r("h2",{attrs:{id:"选择题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#选择题"}},[t._v("#")]),t._v(" 选择题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5e1830c05188254c461313dc",target:"_blank",rel:"noopener noreferrer"}},[t._v("2020 年从基础到进阶，测试你有多了解 JavaScript，刷新你的知识！"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"手写题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手写题"}},[t._v("#")]),t._v(" 手写题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/5c89d447f265da2dd37c604c",target:"_blank",rel:"noopener noreferrer"}},[t._v("23 行代码实现一个带并发数限制的 fetch 请求函数"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5dff8a26e51d4558105420ed",target:"_blank",rel:"noopener noreferrer"}},[t._v("字节跳动面试官：请你实现一个大文件上传和断点续传"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"服务端渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染"}},[t._v("#")]),t._v(" 服务端渲染")])])}),[],!1,null,null,null);e.default=n.exports}}]);